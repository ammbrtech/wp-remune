{"version":3,"sources":["Review.js","Transaction.js","App.js","index.js"],"names":["tableStyle","borderCollapse","fontSize","margin","headerSummary","Review","props","state","identity","plan","amt","steps","this","setState","style","width","value","Component","defaultProps","undefined","Transaction","postData","a","url","data","fetch","method","mode","cache","headers","body","JSON","stringify","response","json","loading","result","trigger","dataMessage","window","remune_script_vars","remune_id","basepath","botType","botId","to_jid","account_id","then","triggetNext","triggerNextStep","className","href","message","target","theme","background","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","App","handleEnd","console","log","icon","base_url","headerTitle","floatingIcon","botAvatar","floating","submitButtonStyle","fill","id","user","validator","options","label","isNaN","component","asMessage","update","waitAction","end","hideInput","React","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.80e54b21.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst tableStyle = {\n  borderCollapse: \"collapse\",\n  fontSize: \"12px\",\n  margin: 0\n};\n\nconst headerSummary = {\n  margin:0\n}\n\nexport default class Review extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      identity: '',\n      plan: '',\n      amt: '',\n    };\n  }\n\n  componentDidMount() {\n    const { steps } = this.props;\n    const { identity, plan, amt } = steps;\n\n    this.setState({ identity, plan, amt });\n  }\n\n  render() {\n    const { identity, plan, amt } = this.state;\n    return (\n      <div style={{ width: '100%' }}>\n        <h5 style={headerSummary}>Summary</h5>\n        <table style={tableStyle}>\n          <tbody>\n            <tr>\n              <td width=\"50%\">Remune ID</td>\n              <td>{identity.value}</td>\n            </tr>\n            <tr>\n              <td>Plan</td>\n              <td>{plan.value}</td>\n            </tr>\n            <tr>\n              <td>XLS</td>\n              <td>{amt.value}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nReview.propTypes = {\n  steps: PropTypes.object,\n};\n\nReview.defaultProps = {\n  steps: undefined,\n};\n","import React, { Component } from 'react';\nimport { Loading } from 'react-simple-chatbot';\n\nexport default class Transaction extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      result: '',\n      trigger: false,\n    };\n  }\n\n  componentDidMount() {\n    const { steps } = this.props;\n    const amt = steps.amt.value;\n    const plan = steps.plan.value;\n    const identity = steps.identity.value;\n    const dataMessage = identity + \" \" + window.remune_script_vars.remune_id + \" \" + amt + \" xlm \" + plan;\n\n    this.postData(window.remune_script_vars.basepath+'/user/app/transaction',\n    {\n      data: dataMessage,\n      botType:\"WP\",\n      botId: \"sd\",\n      to_jid: \"fds\",\n      account_id: \"sdf\"\n    }\n   )\n      .then(data => {\n        this.setState({ loading: false, result: data});\n        this.triggetNext()\n      });\n  }\n\n  triggetNext() {\n    this.setState({ trigger: true }, () => {\n      this.props.triggerNextStep();\n    });\n  }\n\n   postData = async (url = '', data = {}) => {\n      // Default options are marked with *\n      const response = await fetch(url, {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        //credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        //redirect: 'follow', // manual, *follow, error\n        //referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n      });\n      return response.json(); // parses JSON response into native JavaScript objects\n    }\n\n  render () {\n    const { trigger, loading, result } = this.state;\n\n    return (\n      <div className=\"remune-message\" style={{fontSize: \"14px\"}}>\n        { loading && <Loading />}\n        {!loading &&\n          <p>You can go and complete the transaction{' '}\n            <a href={result.message} target=\"_blank\">here</a>\n          </p>\n         }\n\n      </div>\n    );\n\n  }\n}\n","import React from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport Review from './Review'\nimport Transaction from './Transaction'\n\nimport { ThemeProvider } from 'styled-components';\n\nconst theme =  {\n        background: '#f5f8fb',\n        headerBgColor: '#E3392E',\n        headerFontColor: '#fff',\n        headerFontSize: '15px',\n        botBubbleColor: '#FFFFFF',\n        botFontColor: '#000',\n        userBubbleColor: '#FEFEFE',\n        userFontColor: '#010101',\n    }\n\nclass App extends React.Component {\n\n   handleEnd = async() => {\n    console.log(\"doneee\");\n  }\n\n\n\n  render() {\n    const icon = window.remune_script_vars.base_url + process.env.PUBLIC_URL + \"/assets/icon.jpg\";\n    return (\n      <ThemeProvider theme={theme}>\n\n      <ChatBot\n        headerTitle=\"REMUNE\"\n        floatingIcon={icon}\n        botAvatar={icon}\n        floating=\"true\"\n        handleEnd={this.handleEnd}\n        submitButtonStyle={{fill:\"#E3392E\"}}\n        steps={[\n          {\n            id: '1',\n            message: 'What is your remune ID?',\n            trigger: 'identity',\n          },\n          {\n            id: 'identity',\n            user: true,\n            validator: (value) => {\n              if (value === \"\") {\n                return 'Enter your remune ID';\n              }\n              return true;\n            },\n            trigger: '3',\n          },\n          {\n            id: '3',\n            message: 'Hi {previousValue}! Please choose your plan',\n            trigger: 'plan',\n          },\n          {\n            id: 'plan',\n            options: [\n              { value: 'onetime', label: 'One Time', trigger: '5' },\n              { value: 'daily', label: 'Daily', trigger: '5' },\n              { value: 'weekly', label: 'Weekly', trigger: '5' },\n              { value: 'monthly', label: 'Monthly', trigger: '5' },\n            ],\n          },\n          {\n            id: '5',\n            message: 'How much xls you need to send?',\n            trigger: 'amt',\n          },\n          {\n            id: 'amt',\n            user: true,\n            trigger: '7',\n            validator: (value) => {\n              if (isNaN(value)) {\n                return 'value must be a number';\n              } else if (value < 0) {\n                return 'value must be positive';\n              }\n\n              return true;\n            },\n          },\n          {\n            id: '7',\n            message: 'Great! Check out your summary',\n            trigger: 'review',\n          },\n          {\n            id: 'review',\n            component: <Review />,\n            asMessage: true,\n            trigger: 'update',\n          },\n          {\n            id: 'update',\n            message: 'Would you like to update some field?',\n            trigger: 'update-question',\n          },\n          {\n            id: 'update-question',\n            options: [\n              { value: 'yes', label: 'Yes', trigger: 'update-yes' },\n              { value: 'no', label: 'No', trigger: 'transaction' },\n            ],\n          },\n          {\n            id: 'update-yes',\n            message: 'What field would you like to update?',\n            trigger: 'update-fields',\n          },\n          {\n            id: 'update-fields',\n            options: [\n              { value: 'identity', label: 'Remune ID', trigger: 'update-identity' },\n              { value: 'plan', label: 'Plan', trigger: 'update-plan' },\n              { value: 'amt', label: 'XLS', trigger: 'update-amt' },\n            ],\n          },\n          {\n            id: 'update-identity',\n            update: 'identity',\n            trigger: '7',\n          },\n          {\n            id: 'update-plan',\n            update: 'plan',\n            trigger: '7',\n          },\n          {\n            id: 'update-amt',\n            update: 'amt',\n            trigger: '7',\n          },\n          {\n            id: 'transaction',\n            component: <Transaction />,\n            asMessage: true,\n            waitAction: true,\n            trigger: 'response',\n          },\n          {\n            id: 'response',\n            message: 'Would you like to do another transaction?',\n            trigger: 'response-question',\n          },\n          {\n            id: 'response-question',\n            options: [\n              { value: 'yes', label: 'Yes', trigger: '1' },\n              { value: 'no', label: 'No', trigger: 'end-message' },\n            ],\n          },\n          {\n            id: 'end-message',\n            message: 'Thank You!',\n            end: true,\n            hideInput: true\n          },\n        ]}\n      />\n      </ThemeProvider>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nconst target = document.getElementById('remune-wrapper');\nif (target) { ReactDOM.render(<App />, target); }\n\n//serviceWorker.unregister();\n"],"sourceRoot":""}
{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/wordpress/wp-content/plugins/remune/widget/src/Transaction.js\";\nimport React, { Component } from 'react';\nimport { Loading } from 'react-simple-chatbot';\nexport default class Transaction extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postData = async (url = '', data = {}) => {\n      // Default options are marked with *\n      const response = await fetch(url, {\n        method: 'POST',\n        // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors',\n        // no-cors, *cors, same-origin\n        cache: 'no-cache',\n        // *default, no-cache, reload, force-cache, only-if-cached\n        //credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        //redirect: 'follow', // manual, *follow, error\n        //referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n      });\n      return response.json(); // parses JSON response into native JavaScript objects\n    };\n\n    this.state = {\n      loading: true,\n      result: '',\n      trigger: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      steps\n    } = this.props;\n    const amt = steps.amt.value;\n    const plan = steps.plan.value;\n    const identity = steps.identity.value;\n    const dataMessage = identity + \" \" + window.remune_script_vars.remune_id + \" \" + amt + \" xlm \" + plan;\n    console.log(dataMessage);\n    this.postData(window.remune_script_vars.basepath + '/user/app/transaction', {\n      data: dataMessage,\n      botType: \"WP\",\n      botId: \"sd\",\n      to_jid: \"fds\",\n      account_id: \"sdf\"\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        loading: false,\n        result: data\n      });\n    });\n  }\n\n  triggetNext() {\n    this.setState({\n      trigger: true\n    }, () => {\n      this.props.triggerNextStep();\n    });\n  }\n\n  render() {\n    const {\n      trigger,\n      loading,\n      result\n    } = this.state;\n    console.log(trigger, loading, result);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"remune-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }) : result.message);\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/wordpress/wp-content/plugins/remune/widget/src/Transaction.js"],"names":["React","Component","Loading","Transaction","constructor","props","postData","url","data","response","fetch","method","mode","cache","headers","body","JSON","stringify","json","state","loading","result","trigger","componentDidMount","steps","amt","value","plan","identity","dataMessage","window","remune_script_vars","remune_id","console","log","basepath","botType","botId","to_jid","account_id","then","setState","triggetNext","triggerNextStep","render","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AACjDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuClBC,QAvCkB,GAuCP,OAAOC,GAAG,GAAG,EAAb,EAAiBC,IAAI,GAAG,EAAxB,KAA+B;AACvC;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAChCI,QAAAA,MAAM,EAAE,MADwB;AAChB;AAChBC,QAAAA,IAAI,EAAE,MAF0B;AAElB;AACdC,QAAAA,KAAK,EAAE,UAHyB;AAGb;AACnB;AACAC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT,CAEP;;AAFO,SALuB;AAShC;AACA;AACAC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAX0B,CAWL;;AAXK,OAAN,CAA5B;AAaA,aAAOC,QAAQ,CAACS,IAAT,EAAP,CAfuC,CAef;AACzB,KAvDgB;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKnB,KAAvB;AACA,UAAMoB,GAAG,GAAGD,KAAK,CAACC,GAAN,CAAUC,KAAtB;AACA,UAAMC,IAAI,GAAGH,KAAK,CAACG,IAAN,CAAWD,KAAxB;AACA,UAAME,QAAQ,GAAGJ,KAAK,CAACI,QAAN,CAAeF,KAAhC;AACA,UAAMG,WAAW,GAAGD,QAAQ,GAAG,GAAX,GAAiBE,MAAM,CAACC,kBAAP,CAA0BC,SAA3C,GAAuD,GAAvD,GAA6DP,GAA7D,GAAmE,OAAnE,GAA6EE,IAAjG;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AAEA,SAAKvB,QAAL,CAAcwB,MAAM,CAACC,kBAAP,CAA0BI,QAA1B,GAAmC,uBAAjD,EACA;AACE3B,MAAAA,IAAI,EAAEqB,WADR;AAEEO,MAAAA,OAAO,EAAC,IAFV;AAGEC,MAAAA,KAAK,EAAE,IAHT;AAIEC,MAAAA,MAAM,EAAE,KAJV;AAKEC,MAAAA,UAAU,EAAE;AALd,KADA,EASGC,IATH,CASQhC,IAAI,IAAI;AACZyB,MAAAA,OAAO,CAACC,GAAR,CAAY1B,IAAZ;AACA,WAAKiC,QAAL,CAAc;AAAErB,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,MAAM,EAAEb;AAA1B,OAAd;AACD,KAZH;AAaD;;AAEDkC,EAAAA,WAAW,GAAG;AACZ,SAAKD,QAAL,CAAc;AAAEnB,MAAAA,OAAO,EAAE;AAAX,KAAd,EAAiC,MAAM;AACrC,WAAKjB,KAAL,CAAWsC,eAAX;AACD,KAFD;AAGD;;AAoBDC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEtB,MAAAA,OAAF;AAAWF,MAAAA,OAAX;AAAoBC,MAAAA;AAApB,QAA+B,KAAKF,KAA1C;AAEAc,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ,EAAqBF,OAArB,EAA8BC,MAA9B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAiBC,MAAM,CAACwB,OADnC,CADF;AAMD;;AArEgD","sourcesContent":["import React, { Component } from 'react';\nimport { Loading } from 'react-simple-chatbot';\n\nexport default class Transaction extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      result: '',\n      trigger: false,\n    };\n  }\n\n  componentDidMount() {\n    const { steps } = this.props;\n    const amt = steps.amt.value;\n    const plan = steps.plan.value;\n    const identity = steps.identity.value;\n    const dataMessage = identity + \" \" + window.remune_script_vars.remune_id + \" \" + amt + \" xlm \" + plan;\n    console.log(dataMessage);\n\n    this.postData(window.remune_script_vars.basepath+'/user/app/transaction',\n    {\n      data: dataMessage,\n      botType:\"WP\",\n      botId: \"sd\",\n      to_jid: \"fds\",\n      account_id: \"sdf\"\n    }\n   )\n      .then(data => {\n        console.log(data);\n        this.setState({ loading: false, result: data});\n      });\n  }\n\n  triggetNext() {\n    this.setState({ trigger: true }, () => {\n      this.props.triggerNextStep();\n    });\n  }\n\n   postData = async (url = '', data = {}) => {\n      // Default options are marked with *\n      const response = await fetch(url, {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        //credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        //redirect: 'follow', // manual, *follow, error\n        //referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n      });\n      return response.json(); // parses JSON response into native JavaScript objects\n    }\n\n  render () {\n    const { trigger, loading, result } = this.state;\n\n    console.log(trigger, loading, result);\n\n    return (\n      <div className=\"remune-message\">\n        { loading ? <Loading /> : result.message }\n      </div>\n    );\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
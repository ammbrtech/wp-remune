{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/wordpress/wp-content/plugins/remune/widget/src/App.js\";\nimport React from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport Review from './Review';\nimport Transaction from './Transaction';\nimport { ThemeProvider } from 'styled-components';\nconst theme = {\n  background: '#f5f8fb',\n  headerBgColor: '#E3392E',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#FFFFFF',\n  botFontColor: '#000',\n  userBubbleColor: '#FEFEFE',\n  userFontColor: '#010101'\n};\nvar remune_script_vars = {\n  \"basepath\": \"https:\\/\\/api.remune.io\",\n  \"remune_id\": \"sruthi\",\n  \"base_url\": \"http:\\/\\/localhost:8888\\/wordpress\"\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleEnd = async () => {\n      await this.sleep(4000);\n      console.log(\"doneee\");\n    };\n\n    this.sleep = ms => {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    };\n  }\n\n  render() {\n    const icon = window.remune_script_vars.base_url + process.env.PUBLIC_URL + \"/assets/icon.jpg\";\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ChatBot, {\n      headerTitle: \"REMUNE\",\n      floatingIcon: icon,\n      botAvatar: icon,\n      floating: \"true\",\n      handleEnd: this.handleEnd,\n      steps: [{\n        id: '1',\n        message: 'What is your remune ID?',\n        trigger: 'identity'\n      }, {\n        id: 'identity',\n        user: true,\n        trigger: '3'\n      }, {\n        id: '3',\n        message: 'Hi {previousValue}! Please choose your plan',\n        trigger: 'plan'\n      }, {\n        id: 'plan',\n        options: [{\n          value: 'onetime',\n          label: 'One Time',\n          trigger: '5'\n        }, {\n          value: 'daily',\n          label: 'Daily',\n          trigger: '5'\n        }, {\n          value: 'weekly',\n          label: 'Weekly',\n          trigger: '5'\n        }, {\n          value: 'monthly',\n          label: 'Monthly',\n          trigger: '5'\n        }]\n      }, {\n        id: '5',\n        message: 'How much xls you need to send?',\n        trigger: 'amt'\n      }, {\n        id: 'amt',\n        user: true,\n        trigger: '7',\n        validator: value => {\n          if (isNaN(value)) {\n            return 'value must be a number';\n          } else if (value < 0) {\n            return 'value must be positive';\n          } else if (value > 120) {\n            return `${value}? Come on!`;\n          }\n\n          return true;\n        }\n      }, {\n        id: '7',\n        message: 'Great! Check out your summary',\n        trigger: 'review'\n      }, {\n        id: 'review',\n        component: /*#__PURE__*/React.createElement(Review, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 24\n          }\n        }),\n        asMessage: true,\n        trigger: 'update'\n      }, {\n        id: 'update',\n        message: 'Would you like to update some field?',\n        trigger: 'update-question'\n      }, {\n        id: 'update-question',\n        options: [{\n          value: 'yes',\n          label: 'Yes',\n          trigger: 'update-yes'\n        }, {\n          value: 'no',\n          label: 'No',\n          trigger: 'transaction'\n        }]\n      }, {\n        id: 'update-yes',\n        message: 'What field would you like to update?',\n        trigger: 'update-fields'\n      }, {\n        id: 'update-fields',\n        options: [{\n          value: 'identity',\n          label: 'Remune ID',\n          trigger: 'update-identity'\n        }, {\n          value: 'plan',\n          label: 'Plan',\n          trigger: 'update-plan'\n        }, {\n          value: 'amt',\n          label: 'XLS',\n          trigger: 'update-amt'\n        }]\n      }, {\n        id: 'update-identity',\n        update: 'identity',\n        trigger: '7'\n      }, {\n        id: 'update-plan',\n        update: 'plan',\n        trigger: '7'\n      }, {\n        id: 'update-amt',\n        update: 'amt',\n        trigger: '7'\n      }, {\n        id: 'transaction',\n        component: /*#__PURE__*/React.createElement(Transaction, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 24\n          }\n        }),\n        waitAction: true,\n        trigger: 'end-message'\n      }, {\n        id: 'end-message',\n        message: 'Successfully completed the transaction!',\n        end: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/wordpress/wp-content/plugins/remune/widget/src/App.js"],"names":["React","ChatBot","Review","Transaction","ThemeProvider","theme","background","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","remune_script_vars","App","Component","handleEnd","sleep","console","log","ms","Promise","resolve","setTimeout","render","icon","window","base_url","process","env","PUBLIC_URL","id","message","trigger","user","options","value","label","validator","isNaN","component","asMessage","update","waitAction","end"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport Review from './Review'\nimport Transaction from './Transaction'\n\nimport { ThemeProvider } from 'styled-components';\n\nconst theme =  {\n        background: '#f5f8fb',\n        headerBgColor: '#E3392E',\n        headerFontColor: '#fff',\n        headerFontSize: '15px',\n        botBubbleColor: '#FFFFFF',\n        botFontColor: '#000',\n        userBubbleColor: '#FEFEFE',\n        userFontColor: '#010101',\n    }\n\nvar remune_script_vars = {\"basepath\":\"https:\\/\\/api.remune.io\",\"remune_id\":\"sruthi\",\"base_url\":\"http:\\/\\/localhost:8888\\/wordpress\"};\n\nclass App extends React.Component {\n\n   handleEnd = async() => {\n    await this.sleep(4000);\n    console.log(\"doneee\");\n  }\n\n  sleep = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n\n\n  render() {\n    const icon = window.remune_script_vars.base_url + process.env.PUBLIC_URL + \"/assets/icon.jpg\";\n    return (\n      <ThemeProvider theme={theme}>\n\n      <ChatBot\n        headerTitle=\"REMUNE\"\n        floatingIcon={icon}\n        botAvatar={icon}\n        floating=\"true\"\n        handleEnd={this.handleEnd}\n        steps={[\n          {\n            id: '1',\n            message: 'What is your remune ID?',\n            trigger: 'identity',\n          },\n          {\n            id: 'identity',\n            user: true,\n            trigger: '3',\n          },\n          {\n            id: '3',\n            message: 'Hi {previousValue}! Please choose your plan',\n            trigger: 'plan',\n          },\n          {\n            id: 'plan',\n            options: [\n              { value: 'onetime', label: 'One Time', trigger: '5' },\n              { value: 'daily', label: 'Daily', trigger: '5' },\n              { value: 'weekly', label: 'Weekly', trigger: '5' },\n              { value: 'monthly', label: 'Monthly', trigger: '5' },\n            ],\n          },\n          {\n            id: '5',\n            message: 'How much xls you need to send?',\n            trigger: 'amt',\n          },\n          {\n            id: 'amt',\n            user: true,\n            trigger: '7',\n            validator: (value) => {\n              if (isNaN(value)) {\n                return 'value must be a number';\n              } else if (value < 0) {\n                return 'value must be positive';\n              } else if (value > 120) {\n                return `${value}? Come on!`;\n              }\n\n              return true;\n            },\n          },\n          {\n            id: '7',\n            message: 'Great! Check out your summary',\n            trigger: 'review',\n          },\n          {\n            id: 'review',\n            component: <Review />,\n            asMessage: true,\n            trigger: 'update',\n          },\n          {\n            id: 'update',\n            message: 'Would you like to update some field?',\n            trigger: 'update-question',\n          },\n          {\n            id: 'update-question',\n            options: [\n              { value: 'yes', label: 'Yes', trigger: 'update-yes' },\n              { value: 'no', label: 'No', trigger: 'transaction' },\n            ],\n          },\n          {\n            id: 'update-yes',\n            message: 'What field would you like to update?',\n            trigger: 'update-fields',\n          },\n          {\n            id: 'update-fields',\n            options: [\n              { value: 'identity', label: 'Remune ID', trigger: 'update-identity' },\n              { value: 'plan', label: 'Plan', trigger: 'update-plan' },\n              { value: 'amt', label: 'XLS', trigger: 'update-amt' },\n            ],\n          },\n          {\n            id: 'update-identity',\n            update: 'identity',\n            trigger: '7',\n          },\n          {\n            id: 'update-plan',\n            update: 'plan',\n            trigger: '7',\n          },\n          {\n            id: 'update-amt',\n            update: 'amt',\n            trigger: '7',\n          },\n          {\n            id: 'transaction',\n            component: <Transaction />,\n            waitAction: true,\n            trigger: 'end-message',\n          },\n          {\n            id: 'end-message',\n            message: 'Successfully completed the transaction!',\n            end: true,\n          },\n        ]}\n      />\n      </ThemeProvider>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
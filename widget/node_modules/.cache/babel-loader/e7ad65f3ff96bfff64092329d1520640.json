{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/MAMP/htdocs/wordpress/wp-content/plugins/remune/widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Applications/MAMP/htdocs/wordpress/wp-content/plugins/remune/widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Applications/MAMP/htdocs/wordpress/wp-content/plugins/remune/widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Applications/MAMP/htdocs/wordpress/wp-content/plugins/remune/widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Applications/MAMP/htdocs/wordpress/wp-content/plugins/remune/widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Applications/MAMP/htdocs/wordpress/wp-content/plugins/remune/widget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Loading}from'react-simple-chatbot';var DBPedia=/*#__PURE__*/function(_Component){_inherits(DBPedia,_Component);var _super=_createSuper(DBPedia);function DBPedia(props){var _this;_classCallCheck(this,DBPedia);_this=_super.call(this,props);_this.postData=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,data,response,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=_args.length>0&&_args[0]!==undefined?_args[0]:'';data=_args.length>1&&_args[1]!==undefined?_args[1]:{};_context.next=4;return fetch(url,{method:'POST',// *GET, POST, PUT, DELETE, etc.\nmode:'cors',// no-cors, *cors, same-origin\ncache:'no-cache',// *default, no-cache, reload, force-cache, only-if-cached\ncredentials:'same-origin',// include, *same-origin, omit\nheaders:{'Content-Type':'application/json'// 'Content-Type': 'application/x-www-form-urlencoded',\n},redirect:'follow',// manual, *follow, error\nreferrerPolicy:'no-referrer',// no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\nbody:JSON.stringify(data)// body data type must match \"Content-Type\" header\n});case 4:response=_context.sent;return _context.abrupt(\"return\",response.json());case 6:case\"end\":return _context.stop();}}},_callee);}));_this.state={loading:true,result:'',trigger:false};return _this;}_createClass(DBPedia,[{key:\"componentWillMount\",value:function componentWillMount(){var _this2=this;var steps=this.props.steps;var amt=steps.amt.value;var plan=steps.plan.value;var identity=steps.identity.value;var dataMessage=identity+\" John \"+amt+\" xlm \"+plan;console.log(dataMessage);this.postData('https://postman-echo.com/post',{data:dataMessage,botType:\"wordpress\",botId:null,to_jid:null,account_id:null}).then(function(data){_this2.setState({loading:false,result:data});});}},{key:\"triggetNext\",value:function triggetNext(){var _this3=this;this.setState({trigger:true},function(){_this3.props.triggerNextStep();});}},{key:\"render\",value:function render(){var _this4=this;var _this$state=this.state,trigger=_this$state.trigger,loading=_this$state.loading,result=_this$state.result;return/*#__PURE__*/React.createElement(\"div\",{className:\"dbpedia\"},loading?/*#__PURE__*/React.createElement(Loading,null):result,!loading&&/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:'center',marginTop:20}},!trigger&&/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this4.triggetNext();}},\"Search Again\")));}}]);return DBPedia;}(Component);export{DBPedia as default};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/wordpress/wp-content/plugins/remune/widget/src/Transaction.js"],"names":["React","Component","Loading","DBPedia","props","postData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","state","loading","result","trigger","steps","amt","value","plan","identity","dataMessage","console","log","botType","botId","to_jid","account_id","then","setState","triggerNextStep","textAlign","marginTop","triggetNext"],"mappings":"+kCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,sBAAxB,C,GAEqBC,CAAAA,O,kGACnB,iBAAYC,KAAZ,CAAmB,yCACjB,uBAAMA,KAAN,EADiB,MA8BlBC,QA9BkB,sEA8BP,yKAAOC,GAAP,+CAAa,EAAb,CAAiBC,IAAjB,+CAAwB,EAAxB,uBAEeC,CAAAA,KAAK,CAACF,GAAD,CAAM,CAChCG,MAAM,CAAE,MADwB,CAChB;AAChBC,IAAI,CAAE,MAF0B,CAElB;AACdC,KAAK,CAAE,UAHyB,CAGb;AACnBC,WAAW,CAAE,aAJmB,CAIJ;AAC5BC,OAAO,CAAE,CACP,eAAgB,kBAChB;AAFO,CALuB,CAShCC,QAAQ,CAAE,QATsB,CASZ;AACpBC,cAAc,CAAE,aAVgB,CAUD;AAC/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAqB;AAXK,CAAN,CAFpB,QAEFY,QAFE,+CAeDA,QAAQ,CAACC,IAAT,EAfC,wDA9BO,GAGjB,MAAKC,KAAL,CAAa,CACXC,OAAO,CAAE,IADE,CAEXC,MAAM,CAAE,EAFG,CAGXC,OAAO,CAAE,KAHE,CAAb,CAHiB,aAQlB,C,mFAEoB,oBACXC,CAAAA,KADW,CACD,KAAKrB,KADJ,CACXqB,KADW,CAEnB,GAAMC,CAAAA,GAAG,CAAGD,KAAK,CAACC,GAAN,CAAUC,KAAtB,CACA,GAAMC,CAAAA,IAAI,CAAGH,KAAK,CAACG,IAAN,CAAWD,KAAxB,CACA,GAAME,CAAAA,QAAQ,CAAGJ,KAAK,CAACI,QAAN,CAAeF,KAAhC,CACA,GAAMG,CAAAA,WAAW,CAAGD,QAAQ,CAAG,QAAX,CAAsBH,GAAtB,CAA4B,OAA5B,CAAsCE,IAA1D,CACAG,OAAO,CAACC,GAAR,CAAYF,WAAZ,EAEA,KAAKzB,QAAL,CAAc,+BAAd,CAA+C,CAAEE,IAAI,CAAEuB,WAAR,CAAoBG,OAAO,CAAC,WAA5B,CAAwCC,KAAK,CAAC,IAA9C,CAAmDC,MAAM,CAAC,IAA1D,CAA+DC,UAAU,CAAC,IAA1E,CAA/C,EACGC,IADH,CACQ,SAAA9B,IAAI,CAAI,CACZ,MAAI,CAAC+B,QAAL,CAAc,CAAEhB,OAAO,CAAE,KAAX,CAAkBC,MAAM,CAAEhB,IAA1B,CAAd,EACD,CAHH,EAID,C,iDAEa,iBACZ,KAAK+B,QAAL,CAAc,CAAEd,OAAO,CAAE,IAAX,CAAd,CAAiC,UAAM,CACrC,MAAI,CAACpB,KAAL,CAAWmC,eAAX,GACD,CAFD,EAGD,C,uCAoBS,iCAC6B,KAAKlB,KADlC,CACAG,OADA,aACAA,OADA,CACSF,OADT,aACSA,OADT,CACkBC,MADlB,aACkBA,MADlB,CAGR,mBACF,2BAAK,SAAS,CAAC,SAAf,EACID,OAAO,cAAG,oBAAC,OAAD,MAAH,CAAiBC,MAD5B,CAGI,CAACD,OAAD,eACI,2BACE,KAAK,CAAE,CACLkB,SAAS,CAAE,QADN,CAELC,SAAS,CAAE,EAFN,CADT,EAOI,CAACjB,OAAD,eACA,8BACE,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACkB,WAAL,EAAN,EADX,iBARJ,CAJR,CADE,CAwBD,C,qBA5EkCzC,S,SAAhBE,O","sourcesContent":["import React, { Component } from 'react';\nimport { Loading } from 'react-simple-chatbot';\n\nexport default class DBPedia extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      result: '',\n      trigger: false,\n    };\n  }\n\n  componentWillMount() {\n    const { steps } = this.props;\n    const amt = steps.amt.value;\n    const plan = steps.plan.value;\n    const identity = steps.identity.value;\n    const dataMessage = identity + \" John \" + amt + \" xlm \" + plan;\n    console.log(dataMessage);\n\n    this.postData('https://postman-echo.com/post', { data: dataMessage,botType:\"wordpress\",botId:null,to_jid:null,account_id:null })\n      .then(data => {\n        this.setState({ loading: false, result: data});\n      });\n  }\n\n  triggetNext() {\n    this.setState({ trigger: true }, () => {\n      this.props.triggerNextStep();\n    });\n  }\n\n   postData = async (url = '', data = {}) => {\n      // Default options are marked with *\n      const response = await fetch(url, {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n      });\n      return response.json(); // parses JSON response into native JavaScript objects\n    }\n\n  render () {\n    const { trigger, loading, result } = this.state;\n\n    return (\n  <div className=\"dbpedia\">\n    { loading ? <Loading /> : result }\n    {\n      !loading &&\n          <div\n            style={{\n              textAlign: 'center',\n              marginTop: 20,\n            }}\n          >\n            {\n              !trigger &&\n              <button\n                onClick={() => this.triggetNext()}\n              >\n                Search Again\n              </button>\n            }\n          </div>\n        }\n      </div>\n    );\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}